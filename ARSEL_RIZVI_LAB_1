{"cells":[{"cell_type":"markdown","metadata":{"id":"ZQ-tHjsZ7uCa"},"source":["# Lab 1: Python Fundamentals Exercises"]},{"cell_type":"markdown","metadata":{"id":"0efPIl-bKj7L"},"source":["$\\color{red}{\\text{RULES:}}$\n","\n","1) Work individually! You may only ask questions to the Teaching Assistant.\n","\n","2) You can use the lecture notes (that are posted on D2L), but any other materials (e.g. books, web searches) are not allowed\n","\n","$\\color{red}{\\text{SUBMISSION:}}$\n","\n","Please submit your jupyter notebook to the corresponding dropbox in D2L using the naming convention LASTNAME_FIRSTNAME_LAB_LABID.ipynb\n","\n","$\\color{red}{\\text{Not following the rules/submission guidelines will result in point deductions!}}$"]},{"cell_type":"markdown","metadata":{"id":"miOhrnrV7uCc"},"source":["## Question 1"]},{"cell_type":"markdown","metadata":{"id":"t9z_3Lgz7uCe"},"source":["Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5,\n","between 2000 and 3200 (both included).\n","The numbers obtained should be printed in a comma-separated sequence on a single line.\n","\n","**Hints**:\n","Consider use range(#begin, #end) method"]},{"cell_type":"code","source":["[2] 1=[]\n","\n","    for i in range (2000,3201):\n","      if i%7==0 and i%5 !=0:\n","        1.append (str(i))\n","    print (','.join(1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"VlLglx4dKw-w","executionInfo":{"status":"error","timestamp":1694803837743,"user_tz":240,"elapsed":21,"user":{"displayName":"Arsel Rizvi","userId":"05997995905338854079"}},"outputId":"48ec8348-ea3c-4244-f4eb-28573c1a6535"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-fa13fd24983d>\"\u001b[0;36m, line \u001b[0;32m5\u001b[0m\n\u001b[0;31m    1.append (str(i))\u001b[0m\n\u001b[0m     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid decimal literal\n"]}]},{"cell_type":"markdown","metadata":{"id":"qKunWvAM7uCn"},"source":["## Question 2"]},{"cell_type":"markdown","metadata":{"id":"YpcYIlHs7uCp"},"source":["Write a program that calculates and prints the value according to the formula $Q = \\sqrt{[(2 * C * D)/H]}$\n","- C and H are fixed to the following values: C=50, H=30\n","- D is a vector whose values should be input to your program (i.e., ask user to enter these values) in a comma-separated sequence.\n","    - *Example*: Let us assume the following comma separated input sequence is given to the program: 100,150,180\\\n","    The output of the program should be: 18,22,24\n","\n","**Hints**:\n","- If the output received is in decimal form, it should be rounded off to 1 decimal point (for example, if the output generated is 26.23, it should be printed as 26.2)\n","- In case of input data being supplied to the question, it should be assumed to be a console input.\n","- While printing the values as 1 decimal place, you can use \"format\" function, or you can simply round values to 1 digit before printing"]},{"cell_type":"code","source":["  import math\n","\n","numbers = input(\"enter a value for D\")\n","numbers = numbers.spliut('.')\n","\n","value = []\n","for D in numbers:\n","    Q = round (math.sqrt(2*50*int(D)/30))\n","    value.append(Q)\n","\n","  print (value)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"vRu77UogLnvM","executionInfo":{"status":"error","timestamp":1694804137531,"user_tz":240,"elapsed":6929,"user":{"displayName":"Arsel Rizvi","userId":"05997995905338854079"}},"outputId":"9f62d984-60f1-4d5e-990d-00db261c5bda"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["enter a value for D15\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-bc499588dd39>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mnumbers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"enter a value for D\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mnumbers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnumbers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mspliut\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'str' object has no attribute 'spliut'"]}]},{"cell_type":"markdown","metadata":{"id":"48Nt37BN7uCu"},"source":["## Question 3"]},{"cell_type":"markdown","metadata":{"id":"5qxgtxu77uCv"},"source":["Write a program, which will find all such numbers between 1000 and 2300 (both included) such that each digit of the number is an even number.\n","\n","> Indented block\n","\n","\n","The numbers obtained should be printed in a comma-separated sequence on a single line.\n","\n","**Hints**:\n","In case of input data being supplied to the question, it should be assumed to be a console input."]},{"cell_type":"code","source":["numbers = []\n","for x in range (1, 1001):\n","    numSplit = [int(d) for d in str(x)]\n","    odd = False\n","    for y in range (0, len(numSplit)):\n","        if numSplit[y] % 2 != 0:\n","            odd = True\n","    if (odd == False):\n","        numbers.append(x)\n","print (numbers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1uGvsXyjMxcX","executionInfo":{"status":"ok","timestamp":1694804209876,"user_tz":240,"elapsed":282,"user":{"displayName":"Arsel Rizvi","userId":"05997995905338854079"}},"outputId":"2ff075eb-aab8-4c92-ff74-70ff1ef59358"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 4, 6, 8, 20, 22, 24, 26, 28, 40, 42, 44, 46, 48, 60, 62, 64, 66, 68, 80, 82, 84, 86, 88, 200, 202, 204, 206, 208, 220, 222, 224, 226, 228, 240, 242, 244, 246, 248, 260, 262, 264, 266, 268, 280, 282, 284, 286, 288, 400, 402, 404, 406, 408, 420, 422, 424, 426, 428, 440, 442, 444, 446, 448, 460, 462, 464, 466, 468, 480, 482, 484, 486, 488, 600, 602, 604, 606, 608, 620, 622, 624, 626, 628, 640, 642, 644, 646, 648, 660, 662, 664, 666, 668, 680, 682, 684, 686, 688, 800, 802, 804, 806, 808, 820, 822, 824, 826, 828, 840, 842, 844, 846, 848, 860, 862, 864, 866, 868, 880, 882, 884, 886, 888]\n"]}]},{"cell_type":"markdown","metadata":{"id":"7MeYZUxk7uC0"},"source":["## Question 4"]},{"cell_type":"markdown","metadata":{"id":"NLl5Jy5G7uC1"},"source":["Write a program which accepts a string from console and print the characters that have even indexes.\n","\n","Example: If the following string is given as input to the program: H1e2l3l4o5w6o7r8l9d\\\n","Then, the output of the program should be: Helloworld\n","\n","Hints:\n","Use list[::2] to iterate a list by step 2."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"-ghw8aiEKj7N","executionInfo":{"status":"error","timestamp":1694804523754,"user_tz":240,"elapsed":305,"user":{"displayName":"Arsel Rizvi","userId":"05997995905338854079"}},"outputId":"0bca0617-913c-4ded-a11f-2f68cc3c627c"},"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-9-a6cfacd364f4>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    [18] print (\"Enter Text\")\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}],"source":["import string\n","[18] print (\"Enter Text\")\n","      text = input ()\n","\n","      if text:\n","        string\n","        for i in text:\n","          if text.index (i)%2==0:\n","            string+= str(i)\n","\n","            print (\"answer\")\n","            print (string)"]}],"metadata":{"colab":{"provenance":[{"file_id":"1eMnGKTS6pqlAhUffgRxOfofiRSPED8aS","timestamp":1694804532125}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.13"},"vscode":{"interpreter":{"hash":"763a52b0e09272ab15b7556ed1a602a3ed8f0682a15cc5332edf2458bc50346a"}}},"nbformat":4,"nbformat_minor":0}